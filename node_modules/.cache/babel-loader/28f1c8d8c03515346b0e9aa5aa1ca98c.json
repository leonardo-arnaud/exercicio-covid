{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROGRAMACAO\\\\COVID\\\\covid19-pwa\\\\src\\\\containers\\\\Main\\\\components\\\\Panel.jsx\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport RefreshIcon from \"assets/images/refresh.svg\";\nimport { Card, Typography, Button, Select, MenuItem } from 'components';\nimport COUNTRIES from 'commons/constants/countries';\nimport { CardPanelContentStyled, ItemStyled } from './style';\nconst navigatorHasShare = navigator.share;\n\nfunction Panel({\n  updatedAt,\n  onChange,\n  data,\n  country,\n  getCovidData\n}) {\n  const {\n    cases,\n    recovered,\n    deaths,\n    todayCases,\n    todayDeaths\n  } = data;\n\n  const renderCountries = (country, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: `country-${index}`,\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ItemStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, country.label), /*#__PURE__*/React.createElement(\"img\", {\n    src: country.flag,\n    alt: `País-${country.label}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })));\n\n  const textCovid19 = `País: ${country} - Dados atualizados em ${updatedAt} - Hoje - Casos: ${todayCases}. Óbitos: ${todayDeaths}. Total - Casos: ${cases}. Óbitos: ${deaths}. Recuperados: ${recovered}`;\n\n  const shareInfo = () => {\n    navigator.share({\n      title: `Dados do Covid19 - ${country}`,\n      text: textCovid19,\n      url: 'https://covid19pwa.netlify.app/'\n    });\n  };\n\n  const copyInfo = () => {\n    navigator.clipboard.writeText(textCovid19);\n  };\n\n  const renderShareButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: shareInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Compartilhar\"));\n  const renderCopyButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: copyInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Copiar\"));\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardPanelContentStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"span\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"COVID19\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Painel Coronav\\xEDrus\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Atualizado em: \", updatedAt), /*#__PURE__*/React.createElement(\"img\", {\n    src: RefreshIcon,\n    alt: \"Atualizar\",\n    onClick: () => getCovidData(country),\n    className: \"cursor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: onChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, COUNTRIES.map(renderCountries)))), navigatorHasShare ? renderShareButton : renderCopyButton));\n}\n\nPanel.propTypes = {\n  data: PropTypes.object.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default memo(Panel);","map":{"version":3,"sources":["C:/PROGRAMACAO/COVID/covid19-pwa/src/containers/Main/components/Panel.jsx"],"names":["React","memo","PropTypes","Card","Typography","Button","Select","MenuItem","COUNTRIES","CardPanelContentStyled","ItemStyled","navigatorHasShare","navigator","share","Panel","updatedAt","onChange","data","country","getCovidData","cases","recovered","deaths","todayCases","todayDeaths","renderCountries","index","value","label","flag","textCovid19","shareInfo","title","text","url","copyInfo","clipboard","writeText","renderShareButton","renderCopyButton","RefreshIcon","map","propTypes","object","isRequired","string","func"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RefreshIcon from 'assets/images/refresh.svg'\r\nimport { Card, Typography, Button, Select, MenuItem } from 'components'\r\nimport COUNTRIES from 'commons/constants/countries'\r\nimport { CardPanelContentStyled, ItemStyled } from './style'\r\n\r\nconst navigatorHasShare = navigator.share\r\n\r\nfunction Panel({ updatedAt, onChange, data, country, getCovidData }) {\r\n  const { cases, recovered, deaths, todayCases, todayDeaths } = data\r\n\r\n  const renderCountries = (country, index) => (\r\n    <MenuItem key={`country-${index}`} value={country.value}>\r\n      <ItemStyled>\r\n        <div>{country.label}</div>\r\n        <img src={country.flag} alt={`País-${country.label}`} />\r\n      </ItemStyled>\r\n    </MenuItem>\r\n  )\r\n\r\n  const textCovid19 = `País: ${country} - Dados atualizados em ${updatedAt} - Hoje - Casos: ${todayCases}. Óbitos: ${todayDeaths}. Total - Casos: ${cases}. Óbitos: ${deaths}. Recuperados: ${recovered}`\r\n\r\n  const shareInfo = () => {\r\n    navigator.share({\r\n      title: `Dados do Covid19 - ${country}`,\r\n      text: textCovid19,\r\n      url: 'https://covid19pwa.netlify.app/',\r\n    })\r\n  }\r\n\r\n  const copyInfo = () => {\r\n    navigator.clipboard.writeText(textCovid19);\r\n\r\n  }\r\n\r\n  const renderShareButton = (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={shareInfo}>\r\n        Compartilhar\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  const renderCopyButton = (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={copyInfo}>\r\n        Copiar\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Card>\r\n      <CardPanelContentStyled>\r\n        <div>\r\n          <Typography variant=\"h5\" component=\"span\" color=\"primary\">COVID19</Typography>\r\n          <Typography variant=\"h6\" component=\"p\">Painel Coronavírus</Typography>\r\n          <Typography variant=\"body2\" component=\"span\" color=\"secondary\">Atualizado em: {updatedAt}</Typography>\r\n          <img src={RefreshIcon} alt=\"Atualizar\" onClick={() => getCovidData(country)} className=\"cursor\" />\r\n          <div className=\"pt-2\">\r\n            <Select onChange={onChange} value={country}>\r\n              {COUNTRIES.map(renderCountries)}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        {navigatorHasShare ? renderShareButton : renderCopyButton}\r\n      </CardPanelContentStyled>\r\n    </Card>\r\n  )\r\n}\r\n\r\nPanel.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  updatedAt: PropTypes.string.isRequired,\r\n  country: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default memo(Panel)\r\n"]},"metadata":{},"sourceType":"module"}